LOAD_STRING r4 6 "canvas" 
LOAD_STRING r3 14 "getElementById" 
PROPACCESS r1 r2 r3 
FUNC_CALL r0 r1 r2 [r4] 
LOAD_STRING r8 2 "2d" 
LOAD_STRING r7 10 "getContext" 
PROPACCESS r6 r0 r7 
FUNC_CALL r5 r6 r0 [r8] 
LOAD_STRING r10 6 "height" 
PROPACCESS r9 r0 r10 
LOAD_STRING r12 5 "width" 
PROPACCESS r11 r0 r12 
LOAD_NUM r13 50 
LOAD_NUM r14 40 
DIV r15 r9 r14 
COPY r16 r253 
COPY r17 r253 
CALL_BCFUNC a r202 [] 
COPY r18 r255 
COPY r19 r254 
LOAD_NUM r21 2 
LOAD_NUM r22 3 
LOAD_NUM r26 2 
DIV r25 r13 r26 
LOAD_NUM r28 2 
DIV r27 r14 r28 
LOAD_ARRAY r24 [r25, r27, r21] 
LOAD_NUM r32 2 
DIV r31 r13 r32 
ADD r30 r31 r254 
LOAD_NUM r34 2 
DIV r33 r14 r34 
LOAD_ARRAY r29 [r30, r33, r21] 
LOAD_NUM r38 2 
DIV r37 r13 r38 
LOAD_NUM r39 2 
ADD r36 r37 r39 
LOAD_NUM r41 2 
DIV r40 r14 r41 
LOAD_ARRAY r35 [r36, r40, r21] 
LOAD_ARRAY r23 [r24, r29, r35] 
COPY r42 r255 
COPY r43 r21 
LOAD_NUM r44 100 
COPY r45 r253 
LOAD_STRING r50 7 "keydown" 
BCFUNC_CALLBACK r51 b [r48] 
LOAD_NUM r52 0 
LOAD_STRING r49 16 "addEventListener" 
PROPACCESS r48 r2 r49 
FUNC_CALL r202 r48 r2 [r50, r51, r52] 
CALL_BCFUNC c r202 [] 
EXIT 

d:
LOAD_STRING r26 6 "random" 
PROPACCESS r25 r20 r26 
FUNC_CALL r24 r25 r20 [] 
MUL r23 r24 r17 
ADD r22 r23 r16 
LOAD_STRING r21 5 "floor" 
PROPACCESS r19 r20 r21 
FUNC_CALL r18 r19 r20 [r22] 
RETURN_BCFUNC r18 [] 

k:
LOAD_STRING r21 9 "beginPath" 
PROPACCESS r19 r5 r21 
FUNC_CALL r202 r19 r5 [] 
MUL r25 r16 r15 
ADD r24 r25 r254 
MUL r27 r17 r15 
ADD r26 r27 r254 
MINUS r28 r15 r254 
MINUS r29 r15 r254 
LOAD_STRING r23 4 "rect" 
PROPACCESS r22 r5 r23 
FUNC_CALL r202 r22 r5 [r24, r26, r28, r29] 
LOAD_STRING r30 9 "fillStyle" 
PROPSET r5 r30 r18 
LOAD_STRING r32 4 "fill" 
PROPACCESS r31 r5 r32 
FUNC_CALL r202 r31 r5 [] 
LOAD_STRING r34 9 "closePath" 
PROPACCESS r33 r5 r34 
FUNC_CALL r202 r33 r5 [] 
RETURN_BCFUNC r253 [r15, r5] 

a:
MINUS r18 r13 r254 
CALL_BCFUNC d r16 [r16, r255, r17, r18] 
MINUS r19 r14 r254 
CALL_BCFUNC d r17 [r16, r255, r17, r19] 
RETURN_BCFUNC r253 [r16, r14, r17, r13] 

i:
LOAD_STRING r47 9 "beginPath" 
PROPACCESS r46 r5 r47 
FUNC_CALL r202 r46 r5 [] 
COPY r48 r15 

f:
COMP_LESS_THAN_EQUAL r49 r48 r11 
JUMP_COND_NEG r49 e 
LOAD_FLOAT r54 0.5 
ADD r53 r54 r48 
LOAD_STRING r52 6 "moveTo" 
PROPACCESS r51 r5 r52 
FUNC_CALL r202 r51 r5 [r53, r255] 
LOAD_FLOAT r58 0.5 
ADD r57 r58 r48 
LOAD_STRING r56 6 "lineTo" 
PROPACCESS r55 r5 r56 
FUNC_CALL r202 r55 r5 [r57, r9] 
ADD r48 r48 r15 
JUMP f 

e:
COPY r59 r15 

h:
COMP_LESS_THAN_EQUAL r60 r59 r9 
JUMP_COND_NEG r60 g 
LOAD_FLOAT r65 0.5 
ADD r64 r65 r59 
LOAD_STRING r63 6 "moveTo" 
PROPACCESS r62 r5 r63 
FUNC_CALL r202 r62 r5 [r255, r64] 
LOAD_FLOAT r69 0.5 
ADD r68 r69 r59 
LOAD_STRING r67 6 "lineTo" 
PROPACCESS r66 r5 r67 
FUNC_CALL r202 r66 r5 [r11, r68] 
ADD r59 r59 r15 
JUMP h 

g:
LOAD_STRING r70 11 "strokeStyle" 
LOAD_STRING r71 4 "grey" 
PROPSET r5 r70 r71 
LOAD_STRING r73 6 "stroke" 
PROPACCESS r72 r5 r73 
FUNC_CALL r202 r72 r5 [] 
LOAD_STRING r75 9 "closePath" 
PROPACCESS r74 r5 r75 
FUNC_CALL r202 r74 r5 [] 
RETURN_BCFUNC r253 [r5, r9, r11, r48, r59, r15] 

bb:
LOAD_STRING r49 5 "width" 
PROPACCESS r48 r0 r49 
LOAD_STRING r51 6 "height" 
PROPACCESS r50 r0 r51 
LOAD_STRING r47 9 "clearRect" 
PROPACCESS r46 r5 r47 
FUNC_CALL r202 r46 r5 [r255, r255, r48, r50] 
CALL_BCFUNC i r202 [] 
COPY r52 r255 

l:
LOAD_STRING r55 6 "length" 
PROPACCESS r54 r23 r55 
COMP_LESS_THAN r53 r52 r54 
JUMP_COND_NEG r53 j 
PROPACCESS r57 r23 r52 
PROPACCESS r58 r57 r255 
PROPACCESS r59 r57 r254 
LOAD_STRING r60 6 "orange" 
CALL_BCFUNC k r202 [r16, r58, r17, r59, r18, r60] 
ADD r52 r52 r254 
JUMP l 

j:
LOAD_STRING r61 5 "green" 
CALL_BCFUNC k r202 [r16, r16, r17, r17, r18, r61] 
RETURN_BCFUNC r253 [r0, r17, r52, r23, r16, r5] 

cc:
MINUS r47 r255 r254 
LOAD_ARRAY r46 [r255, r255, r47, r254] 
MINUS r49 r255 r254 
LOAD_ARRAY r48 [r49, r254, r255, r255] 
COPY r50 r43 
COPY r51 r253 
COPY r52 r255 

z:
LOAD_STRING r55 6 "length" 
PROPACCESS r54 r23 r55 
COMP_LESS_THAN r53 r52 r54 
JUMP_COND_NEG r53 m 
PROPACCESS r57 r23 r52 
LOAD_NUM r60 2 
PROPACCESS r59 r57 r60 
COMP_NOT_EQUAL r58 r59 r50 
JUMP_COND_NEG r58 n 
LOAD_NUM r62 2 
PROPACCESS r61 r57 r62 
LOAD_NUM r63 2 
PROPSET r57 r63 r50 
COPY r50 r61 

n:
PROPACCESS r65 r57 r255 
LOAD_NUM r68 2 
PROPACCESS r67 r57 r68 
PROPACCESS r66 r46 r67 
ADD r64 r65 r66 
PROPACCESS r70 r57 r254 
LOAD_NUM r73 2 
PROPACCESS r72 r57 r73 
PROPACCESS r71 r48 r72 
ADD r69 r70 r71 
COMP_EQUAL r74 r64 r16 
JUMP_COND_NEG r74 o 
COMP_EQUAL r74 r69 r17 

o:
JUMP_COND_NEG r74 p 
LOAD_ARRAY r78 [] 
LOAD_STRING r82 6 "length" 
PROPACCESS r81 r23 r82 
MINUS r80 r81 r254 
PROPACCESS r79 r23 r80 
LOAD_STRING r77 6 "assign" 
PROPACCESS r75 r76 r77 
FUNC_CALL r51 r75 r76 [r78, r79] 
CALL_BCFUNC a r202 [] 
ADD r42 r42 r254 

p:
COPY r83 r255 
COPY r84 r255 

t:
LOAD_STRING r87 6 "length" 
PROPACCESS r86 r23 r87 
COMP_LESS_THAN r85 r84 r86 
JUMP_COND_NEG r85 q 
PROPACCESS r89 r23 r84 
PROPACCESS r91 r89 r255 
PROPACCESS r92 r57 r255 
COMP_STRICT_EQUAL r90 r91 r92 
JUMP_COND_NEG r90 r 
PROPACCESS r93 r89 r254 
PROPACCESS r94 r57 r254 
COMP_STRICT_EQUAL r90 r93 r94 

r:
JUMP_COND_NEG r90 s 
ADD r83 r83 r254 

s:
ADD r84 r84 r254 
JUMP t 

q:
COMP_LESS_THAN r95 r64 r255 
COND_JUMP r95 u 
COMP_GREATHER_THAN_EQUAL r95 r64 r13 

u:
COND_JUMP r95 v 
COMP_LESS_THAN r95 r69 r255 

v:
COND_JUMP r95 w 
COMP_GREATHER_THAN_EQUAL r95 r69 r14 

w:
COND_JUMP r95 x 
LOAD_NUM r96 2 
COMP_GREATHER_THAN_EQUAL r95 r83 r96 

x:
JUMP_COND_NEG r95 y 
LOAD_STRING r99 8 "location" 
PROPACCESS r98 r2 r99 
LOAD_STRING r100 6 "reload" 
PROPACCESS r97 r98 r100 
LOAD_STRING r102 8 "location" 
PROPACCESS r101 r2 r102 
FUNC_CALL r202 r97 r101 [] 

y:
LOAD_NUM r105 2 
PROPACCESS r104 r57 r105 
LOAD_ARRAY r103 [r64, r69, r104] 
PROPSET r23 r52 r103 
ADD r52 r52 r254 
JUMP z 

m:
JUMP_COND_NEG r51 aa 
LOAD_STRING r107 4 "push" 
PROPACCESS r106 r23 r107 
FUNC_CALL r202 r106 r23 [r51] 

aa:
BCFUNC_CALLBACK r109 bb [] 
FUNC_CALL r202 r108 r253 [r109] 
RETURN_BCFUNC r253 [r48, r14, r43, r17, r83, r52, r13, r51, r42, r57, r50, r46, r23, r16, r84] 

c:
BCFUNC_CALLBACK r47 cc [] 
FUNC_CALL r45 r46 r253 [r47, r44] 
CALL_BCFUNC bb r202 [] 
RETURN_BCFUNC r253 [r44, r45] 

nn:
JUMP_COND_NEG r45 dd 
FUNC_CALL r202 r47 r253 [r45] 
COPY r45 r253 
JUMP ee 

dd:
CALL_BCFUNC c r202 [] 

ee:
RETURN_BCFUNC r253 [r45] 

b:
COPY r49 r253 
LOAD_STRING r53 3 "key" 
PROPACCESS r52 r48 r53 
LOAD_STRING r54 9 "ArrowLeft" 
COMP_EQUAL r51 r52 r54 
JUMP_COND_NEG r51 ff 
COPY r50 r21 
COPY r49 r22 
JUMP gg 

ff:
LOAD_STRING r57 3 "key" 
PROPACCESS r56 r48 r57 
LOAD_STRING r58 10 "ArrowRight" 
COMP_EQUAL r55 r56 r58 
JUMP_COND_NEG r55 hh 
COPY r50 r22 
COPY r49 r21 
JUMP gg 

hh:
LOAD_STRING r61 3 "key" 
PROPACCESS r60 r48 r61 
LOAD_STRING r62 7 "ArrowUp" 
COMP_EQUAL r59 r60 r62 
JUMP_COND_NEG r59 ii 
COPY r50 r18 
COPY r49 r19 
JUMP gg 

ii:
LOAD_STRING r65 3 "key" 
PROPACCESS r64 r48 r65 
LOAD_STRING r66 9 "ArrowDown" 
COMP_EQUAL r63 r64 r66 
JUMP_COND_NEG r63 gg 
COPY r50 r19 
COPY r49 r18 

gg:
COPY r68 r253 
COMP_STRICT_NOT_EQUAL r67 r49 r68 
JUMP_COND_NEG r67 jj 
COMP_NOT_EQUAL r67 r49 r43 

jj:
JUMP_COND_NEG r67 kk 
COPY r43 r50 
JUMP ll 

kk:
LOAD_STRING r71 3 "key" 
PROPACCESS r70 r48 r71 
LOAD_STRING r72 1 " " 
COMP_EQUAL r69 r70 r72 
JUMP_COND_NEG r69 mm 
CALL_BCFUNC nn r202 [] 
JUMP ll 

mm:
LOAD_STRING r75 3 "key" 
PROPACCESS r74 r48 r75 
LOAD_STRING r77 1 "+" 
COMP_EQUAL r73 r74 r77 
JUMP_COND_NEG r73 ll 
LOAD_NUM r80 10 
MINUS r79 r44 r80 
LOAD_NUM r81 20 
COMP_GREATHER_THAN_EQUAL r78 r79 r81 
COND_JUMP r78 oo 
LOAD_NUM r82 10 
MINUS r44 r44 r82 
JUMP pp 

oo:
LOAD_NUM r44 20 

pp:
CALL_BCFUNC nn r202 [] 
CALL_BCFUNC nn r202 [] 

ll:
RETURN_BCFUNC r253 [r19, r22, r18, r43, r49, r44, r21, r50] 
